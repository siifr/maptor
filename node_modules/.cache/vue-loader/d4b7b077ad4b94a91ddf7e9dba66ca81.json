{"remainingRequest":"/root/webdev/vue-projects/maptor/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/webdev/vue-projects/maptor/src/components/Grid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/webdev/vue-projects/maptor/src/components/Grid.vue","mtime":1604976965756},{"path":"/root/webdev/vue-projects/maptor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/webdev/vue-projects/maptor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/webdev/vue-projects/maptor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/webdev/vue-projects/maptor/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGNvbnN0IGhleEltYWdlID0gcmVxdWlyZSgnQC9hc3NldHMvSGV4LVBhdHRlcm4tMi5wbmcnKTsKLy8gc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1nL0hleC1QYXR0ZXJuLTIuY2VmYjAxNTAucG5nKSIKICBleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnR3JpZCcsCiAgICBjb21wb25lbnRzOiB7CiAgICB9LAogICAgZGF0YTogKCkgPT4gKHsKICAgICAgc3dpdGNoMTp0cnVlLAogICAgICBtYXBJbWFnZTogJycsCiAgICAgIC8vIGhleEltYWdlOiAiLi8uLi9hc3NldHMvSGV4LVBhdHRlcm4tMi5wbmciLAogICAgICBzbGlkZXI6IDIsCiAgICAgIAogICAgfSksIAogICAgY29tcHV0ZWQ6IHsKCiAgICB9CiAgfQo="},{"version":3,"sources":["Grid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"Grid.vue","sourceRoot":"src/components","sourcesContent":["\n<style>\n  body {\n    overflow:hidden;\n  }\n  div.hex1 {\n    background-image: url(./../assets/Hex-Pattern-2.png);\n    position: relative;\n    background-repeat: repeat;\n    height: 100%;\n  }\n  div.hex2 {\n    background-image: url(./../assets/Hex-Pattern.png);\n    background-repeat: repeat;\n    position: relative;\n    height: 100%;\n   \n  }\n  div.grid {\n    width: 100vw;\n    height: 100%;\n    margin: auto;\n    position: relative;\n    padding: 0;\n  }\n  div.map {\n    width: 100vw;\n    height: 100%;\n    position: absolute;\n    background-size: contain;\n  }\n</style>\n\n<template>\n  <v-app>\n    <v-card\n      color=\"grey lighten-4\"\n      absolute\n      dark\n      flat\n      tile>\n      <v-toolbar  style=\"padding-top: 15px\">\n        <v-slider\n          v-model=\"slider\"\n          min=\"2\"\n          max=\"20\"\n          step=\"0.5\"\n          ticks>\n        </v-slider>\n        <v-switch\n          v-model=\"switch1\"\n          label=\"Hex Tile\">\n        </v-switch> \n        <v-spacer></v-spacer>\n        <v-text-field\n          v-model=\"mapImage\"\n          solo\n          label=\"Image URL\"\n          clearable>\n        </v-text-field>\n      </v-toolbar>\n    </v-card>   \n    <div class=\"grid\">\n      <v-img class=\"map\" :src=\"mapImage\" ></v-img>\n      <div \n        :style=\"{'background-size': slider + '%'}\" \n        :class=\"switch1 ? 'hex1' : 'hex2'\" >\n      </div>\n      <div \n        :style=\"{'background-image': 'url('+ mapImage + ');'}\" \n        class=\"map\">\n      </div>\n    </div>\n  </v-app>\n</template>\n<script>\n// const hexImage = require('@/assets/Hex-Pattern-2.png');\n// style=\"background-image: url(/img/Hex-Pattern-2.cefb0150.png)\"\n  export default {\n    name: 'Grid',\n    components: {\n    },\n    data: () => ({\n      switch1:true,\n      mapImage: '',\n      // hexImage: \"./../assets/Hex-Pattern-2.png\",\n      slider: 2,\n      \n    }), \n    computed: {\n\n    }\n  }\n</script>\n"]}]}